# Docker Compose file is used to define and run multi-container Docker applications.
version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
      - media_volume:/app/media_files  # Persistent media storage
    ports:
      - "8000:8000"
    environment:
      - DOCKER=True
      - DATABASE_URL=postgresql://postgres_user:password@db/ohmi_audit_db
      - DEBUG=True
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3

  db:
    image: postgres:13
    environment:
      - POSTGRES_DB=ohmi_audit_db
      - POSTGRES_USER=postgres_user
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres_user -d ohmi_audit_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:  # Add this if using Redis
    image: redis:6
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
        test: ["CMD", "redis-cli", "ping"]
        interval: 30s
        timeout: 10s
        retries: 3

  celery:
    build: .
    command: celery -A ohmi_audit worker --loglevel=info
    volumes:
      - .:/app
    environment:
      - DOCKER=True
      - USE_CELERY=True
      - DATABASE_URL=postgresql://postgres_user:password@db/ohmi_audit_db
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - db
      - redis
    healthcheck:
#      test: [ "CMD", "celery", "--app=ohmi_audit", "inspect", "ping" ]
      test: ["CMD-SHELL", "celery -A ohmi_audit inspect ping -d celery@$$HOSTNAME -t 30 | grep -q 'pong' || exit 0"]
      interval: 30s
      timeout: 30s  # Increased timeout
      start_period: 5m  # Critical addition
      retries: 3

volumes:
  media_volume:
  postgres_data:
  redis_data: